questionName,correctAnswer,incorrectAnswerA,incorrectAnswerB,incorrectAnswerC,difficulty,topicCode,feedback
"What is computational thinking?","A problem-solving method used in computer science","A type of programming language","A hardware component","An internet protocol",Easy,2.1,"Computational thinking involves abstraction, decomposition, and algorithmic thinking to solve problems."
"What is abstraction?","Removing unnecessary details to focus on essentials","Writing code quickly","Building computers","Designing websites",Easy,2.1,"Abstraction simplifies problems by ignoring irrelevant details (e.g., using maps instead of full geography)."
"What is decomposition?","Breaking a problem into smaller, manageable parts","Combining multiple programs","Deleting code","Speeding up computers",Easy,2.1,"Decomposition divides complex problems into sub-problems (e.g., breaking a game into levels, characters, and rules)."
"What is algorithmic thinking?","Creating step-by-step instructions to solve problems","Designing computer hardware","Building networks","Writing essays",Easy,2.1,"Algorithmic thinking involves designing sequences of steps to achieve goals (e.g., recipes or directions)."
"What is an algorithm?","A set of step-by-step instructions to solve a problem","A computer brand","A type of software","An internet connection",Easy,2.1,"Algorithms are precise procedures used in programming and daily life (e.g., sorting data)."
"What is pseudocode?","A simplified way to describe algorithms using natural language","A programming language","A type of computer","A flowchart symbol",Easy,2.1,"Pseudocode helps plan programs without strict syntax rules."
"What is a flowchart?","A diagram showing steps in a process using symbols","A type of graph","A computer program","A sorting algorithm",Easy,2.1,"Flowcharts use shapes like rectangles (process) and diamonds (decisions) to visualize algorithms."
"What is a trace table?","A tool to track variable values during algorithm execution","A database table","A type of hardware","A network diagram",Easy,2.1,"Trace tables help debug algorithms by recording changes step-by-step."
"What is linear search?","Checking each item in a list until target is found","A sorting algorithm","A type of graph","A programming language",Easy,2.1,"Linear search is simple but slow for large lists (O(n) time complexity)."
"What is binary search?","Efficiently finding an item in a sorted list by repeatedly halving the search interval","A sorting algorithm","A way to design flowcharts","A type of variable",Easy,2.1,"Binary search requires a sorted list and has O(log n) time complexity."
"What is bubble sort?","A sorting algorithm that repeatedly swaps adjacent elements if in wrong order","A searching algorithm","A type of loop","A flowchart symbol",Easy,2.1,"Bubble sort is simple but inefficient (O(n²) for large lists."
"What is insertion sort?","Building a sorted list one item at a time by inserting each in correct position","A searching algorithm","A type of variable","A decision symbol",Easy,2.1,"Insertion sort is efficient for small or nearly sorted lists (O(n²) worst-case)."
"What is merge sort?","A divide-and-conquer sorting algorithm that splits lists, sorts, and merges them","A searching algorithm","A type of loop","A programming language",Easy,2.1,"Merge sort has O(n log n) time complexity and is efficient for large lists."
"What is an input in an algorithm?","Data provided to the algorithm","The final result","A step in the process","A type of error",Medium,2.1,"Inputs are the initial data the algorithm processes (e.g., numbers to sort)."
"What is an output in an algorithm?","The result produced by the algorithm","The data given to it","A middle step","A type of variable",Medium,2.1,"Outputs are the solutions or results (e.g., a sorted list)."
"What is a process in an algorithm?","An action performed on data","The input data","The output data","A type of error",Medium,2.1,"Processes are the steps that transform inputs into outputs (e.g., comparing or swapping values)."
"What is a structure diagram?","A tool to decompose a problem into sub-tasks","A sorting algorithm","A type of graph","A trace table",Medium,2.1,"Structure diagrams break down problems hierarchically (e.g., top-down design)."
"What is a syntax error?","A mistake in code structure (e.g., missing punctuation)","A logical mistake in algorithm","A hardware fault","A network issue",Medium,2.1,"Syntax errors prevent code from running (e.g., missing semicolon in Python)."
"What is a logic error?","A mistake where code runs but produces wrong results","A typo in code","A missing file","A slow computer",Medium,2.1,"Logic errors are bugs in algorithm design (e.g., incorrect formula)."
"What is nesting in programming?","Placing structures like loops inside other structures","Writing comments","Naming variables","Drawing flowcharts",Medium,2.1,"Nesting allows complex control flows (e.g., a loop inside an if statement)."
"What is a precondition for binary search?","The list must be sorted","The list must be small","The list must be unsorted","The list must have duplicates",Medium,2.1,"Binary search requires sorted data to correctly halve the search interval."
"What is the time complexity of linear search?","O(n)","O(1)","O(log n)","O(n²)",Medium,2.1,"Linear search checks each element once in worst-case, scaling linearly with list size."
"What is the time complexity of binary search?","O(log n)","O(n)","O(1)","O(n²)",Medium,2.1,"Binary search halves the search space each time, logarithmic growth."
"What is the time complexity of bubble sort?","O(n²)","O(n)","O(log n)","O(1)",Medium,2.1,"Bubble sort uses nested loops, leading to quadratic time for large lists."
"What is the time complexity of merge sort?","O(n log n)","O(n²)","O(n)","O(1)",Medium,2.1,"Merge sort divides lists logarithmically and merges linearly."
"What is a terminal symbol in a flowchart?","Oval - start/end of process","Rectangle - process step","Diamond - decision","Parallelogram - input/output",Medium,2.1,"Terminal symbols indicate the beginning or end of an algorithm."
"What is a decision symbol in a flowchart?","Diamond - represents a condition/question","Rectangle - process step","Oval - start/end","Parallelogram - input/output",Medium,2.1,"Decision symbols branch the flow based on yes/no conditions."
"What is a process symbol in a flowchart?","Rectangle - represents an action/operation","Diamond - decision","Oval - start/end","Parallelogram - input/output",Medium,2.1,"Process symbols indicate steps like calculations or assignments."
"What is an input/output symbol in a flowchart?","Parallelogram - represents data input or output","Rectangle - process","Diamond - decision","Oval - start/end",Medium,2.1,"Input/output symbols show where data enters or leaves the algorithm."
"What is a subroutine in algorithms?","A reusable set of steps (e.g., function or procedure)","A sorting algorithm","A type of variable","A loop structure",Medium,2.1,"Subroutines avoid code duplication and improve organization."
"What is refinement in algorithms?","Improving an algorithm by adding detail or efficiency","Deleting code","Drawing flowcharts","Writing pseudocode",Medium,2.1,"Refinement turns rough ideas into precise, efficient solutions."
"What is the purpose of a trace table?","To debug by tracking variable changes step-by-step","To sort data","To draw flowcharts","To write pseudocode",Medium,2.1,"Trace tables reveal logic errors by showing intermediate values."
"What is the main advantage of binary search over linear search?","Faster for large sorted lists","Easier to code","Works on unsorted lists","Uses less memory",Medium,2.1,"Binary search's logarithmic time beats linear search for large datasets."
"What is the main disadvantage of bubble sort?","Inefficient for large lists (O(n²))","Complex to code","Only works on sorted lists","Requires recursion",Medium,2.1,"Bubble sort's nested loops make it slow for big lists."
"How does insertion sort work?","It builds a sorted list by inserting each new item in correct position","It swaps adjacent items","It divides the list in half","It merges sorted lists",Medium,2.1,"Insertion sort is efficient for small lists and nearly sorted data."
"How does merge sort work?","Divide list into halves, sort each, then merge sorted halves","Swap adjacent items repeatedly","Insert items one by one","Check each item sequentially",Medium,2.1,"Merge sort uses recursion and merging for efficient O(n log n) sorting."
"What is a loop in algorithms?","Repeating a set of steps until condition met","A decision point","An input step","An output step",Medium,2.1,"Loops (e.g., FOR, WHILE) automate repetition without code duplication."
"What is selection in algorithms?","Making decisions using conditions (e.g., IF statements)","Repeating steps","Inputting data","Outputting results",Medium,2.1,"Selection branches code execution based on true/false conditions."
"What is sequence in algorithms?","Executing steps in order","Making decisions","Repeating steps","Breaking down problems",Medium,2.1,"Sequence is the default order of execution from top to bottom."
"What is abstraction in computational thinking?","Ignoring irrelevant details to focus on key aspects","Writing code","Building hardware","Designing networks",Medium,2.1,"Abstraction simplifies problems (e.g., using variables instead of raw data)."
"What is decomposition in computational thinking?","Breaking complex problems into smaller sub-problems","Combining algorithms","Writing pseudocode","Drawing symbols",Medium,2.1,"Decomposition makes problems manageable (e.g., splitting a game into graphics, sound, and logic)."
"What is algorithmic thinking?","Designing step-by-step solutions","Building computers","Writing essays","Drawing pictures",Medium,2.1,"Algorithmic thinking creates precise procedures for problem-solving."
"What is a variable in algorithms?","A named storage location for data","A type of loop","A flowchart symbol","A sorting algorithm",Medium,2.1,"Variables hold values that can change during execution (e.g., counters)."
"What is the purpose of pseudocode?","To plan algorithms without worrying about syntax","To execute code","To build computers","To design websites",Medium,2.1,"Pseudocode bridges human thinking and programming code."
"What is the purpose of flowcharts?","To visualize algorithm steps with symbols","To sort data","To write code","To build hardware",Medium,2.1,"Flowcharts use standardized symbols to represent algorithm logic."
"What is a logic error?","A mistake in algorithm design causing wrong output","A typo in code","A missing file","A slow program",Medium,2.1,"Logic errors are hard to find because code runs but gives incorrect results."
"What is a syntax error?","A violation of programming language rules","A mistake in logic","A hardware issue","A network problem",Medium,2.1,"Syntax errors are caught by compilers/interpreters (e.g., missing bracket)."
"What is the first step in computational thinking?","Understand the problem","Start coding","Buy a computer","Draw a flowchart",Medium,2.1,"Clearly defining the problem is essential before solving it."
"What is the last step in algorithmic design?","Test and refine the algorithm","Abstraction","Decomposition","Write pseudocode",Medium,2.1,"Testing ensures correctness, and refinement improves efficiency."
"What is the key requirement for binary search?","The list must be sorted","The list must be small","The list must be unsorted","The list must have no duplicates",Hard,2.1,"Binary search relies on sorted order to halve the search space correctly."
"What is the worst-case time complexity of linear search?","O(n)","O(1)","O(log n)","O(n²)",Hard,2.1,"In worst-case, linear search checks every element in the list."
"What is the best-case time complexity of binary search?","O(1)","O(n)","O(log n)","O(n²)",Hard,2.1,"Best-case: target is the middle element, found immediately."
"What is the worst-case time complexity of bubble sort?","O(n²)","O(n)","O(log n)","O(1)",Hard,2.1,"Bubble sort may require n passes with n comparisons each."
"What is the space complexity of merge sort?","O(n)","O(1)","O(log n)","O(n²)",Hard,2.1,"Merge sort requires additional memory for merging halves."
"What is the space complexity of insertion sort?","O(1)","O(n)","O(log n)","O(n²)",Hard,2.1,"Insertion sort sorts in-place, using constant extra space."
"What is a stable sorting algorithm?","One that preserves the relative order of equal elements","Fast algorithm","Simple algorithm","Recursive algorithm",Hard,2.1,"Stability matters when sorting by multiple criteria (e.g., merge sort is stable)."
"Is bubble sort stable?","Yes","No","Only sometimes","Never",Hard,2.1,"Bubble sort is stable because it only swaps adjacent unequal elements."
"Is selection sort stable?","No","Yes","Only for numbers","Only for strings",Hard,2.1,"Selection sort is not stable as it may swap equal elements out of order."
"What is the divide-and-conquer strategy?","Break problem into subproblems, solve, combine results","Use loops","Use variables","Draw flowcharts",Hard,2.1,"Merge sort and quicksort use divide-and-conquer for efficiency."
"What is recursion?","A function calling itself","A type of loop","A variable","A syntax error",Hard,2.1,"Recursion solves problems by reducing them to smaller self-similar problems."
"Which searching algorithm requires sorted data?","Binary search","Linear search","Bubble search","Insertion search",Hard,2.1,"Binary search's halving strategy depends on sorted order."
"Which sorting algorithm is most efficient for large lists?","Merge sort","Bubble sort","Insertion sort","Linear sort",Hard,2.1,"Merge sort's O(n log n) time scales well for large datasets."
"What is the purpose of a trace table?","To debug algorithms by tracking variable changes","To sort data","To draw flowcharts","To write code",Hard,2.1,"Trace tables help identify logic errors step-by-step."
"What is an infinite loop?","A loop that never terminates","A fast loop","A sorting algorithm","A flowchart symbol",Hard,2.1,"Infinite loops occur due to incorrect termination conditions."
"What is dry-running an algorithm?","Manually executing steps to check logic","Writing code quickly","Drawing flowcharts","Deleting code",Hard,2.1,"Dry-running with sample inputs reveals errors before coding."
"What is the role of abstraction in algorithms?","Simplify by hiding complex details","Make code longer","Add more steps","Remove inputs",Hard,2.1,"Abstraction focuses on what needs to be done, not how it's implemented."
"What is the role of decomposition in algorithms?","Break problem into manageable modules","Combine steps","Delete steps","Add complexity",Hard,2.1,"Decomposition allows teams to work on different sub-problems."
"What is the role of algorithmic thinking?","Design efficient step-by-step solutions","Build hardware","Write essays","Draw pictures",Hard,2.1,"Algorithmic thinking is key to creating correct and efficient programs."
"What is a precondition for merge sort?","None, it works on any list","List must be sorted","List must be small","List must have no duplicates",Hard,2.1,"Merge sort can sort any list but requires O(n) extra space."
"What is a postcondition of a sorting algorithm?","The list is sorted","The list is reversed","The list is empty","The list is unchanged",Hard,2.1,"Postconditions describe the state after algorithm execution."
"What is an invariant in algorithms?","A condition that remains true during execution","A variable that changes","A syntax error","A loop counter",Hard,2.1,"Invariants help prove correctness (e.g., in binary search, the target is always in the current interval)."
"What is the mid-point calculation in binary search?","(first + last) // 2","first + last","first - last","last - first",Hard,2.1,"Integer division finds the middle index to compare against."
"How many comparisons in worst-case linear search for n elements?","n","1","log n","n²",Hard,2.1,"Linear search may check every element once."
"How many comparisons in worst-case binary search for n elements?","log₂ n","n","1","n²",Hard,2.1,"Binary search halves the list each time, so logarithmic comparisons."
"In bubble sort, how many passes for n elements?","n-1","n","log n","n²",Hard,2.1,"Bubble sort needs up to n-1 passes to ensure sorting."
"What is the main advantage of insertion sort?","Efficient for small or nearly sorted lists","Fast for large lists","Uses no memory","Easy to parallelize",Hard,2.1,"Insertion sort has low overhead and is adaptive."
"What is the main disadvantage of merge sort?","Requires O(n) extra memory","Slow for small lists","Unstable","Complex code",Hard,2.1,"Merge sort's space complexity is a drawback in memory-constrained systems."
"What is a pass in bubble sort?","One complete iteration through the list","A type of variable","A decision point","A subroutine",Hard,2.1,"Each pass places the next largest element in its correct position."
"What is the best-case time complexity of bubble sort?","O(n)","O(n²)","O(log n)","O(1)",Hard,2.1,"Best-case: list is already sorted, so no swaps needed in one pass."
"What is the worst-case time complexity of insertion sort?","O(n²)","O(n)","O(log n)","O(1)",Hard,2.1,"Worst-case: list is reverse sorted, requiring many shifts."
"What is the best-case time complexity of insertion sort?","O(n)","O(n²)","O(log n)","O(1)",Hard,2.1,"Best-case: list is already sorted, so each insert is O(1)."
"What is the time complexity of binary search?","O(log n)","O(n)","O(1)","O(n²)",Hard,2.1,"Binary search's time grows logarithmically with list size."
"What is the time complexity of linear search?","O(n)","O(1)","O(log n)","O(n²)",Hard,2.1,"Linear search's time grows linearly with list size."
"Which algorithm is better for small lists: bubble sort or merge sort?","Bubble sort (lower overhead)","Merge sort","Both same","Neither",Hard,2.1,"For small n, bubble sort's simplicity may beat merge sort's overhead."
"Which algorithm is not comparison-based?","None of these are non-comparison","Binary search","Linear search","Bubble sort",Hard,2.1,"All these algorithms compare elements to determine order."
"What is a sentinel value in linear search?","A special value to avoid boundary checks","A variable","A loop counter","A sorting algorithm",Hard,2.1,"Sentinels simplify code by reducing condition checks."
"In flowcharts, what does a diamond represent?","Decision/condition","Process step","Start/end","Input/output",Hard,2.1,"Diamonds indicate branching points based on yes/no questions."
"In flowcharts, what does a parallelogram represent?","Input/output","Process","Decision","Start/end",Hard,2.1,"Parallelograms show where data enters or leaves the algorithm."
"In flowcharts, what does a rectangle represent?","Process/action","Decision","Start/end","Input/output",Hard,2.1,"Rectangles indicate operations like calculations or assignments."
"In flowcharts, what does an oval represent?","Start/end terminal","Process","Decision","Input/output",Hard,2.1,"Ovals mark the beginning or end of the algorithm flow."
"What is a subroutine symbol in flowcharts?","Rectangle with double stripes","Diamond","Oval","Parallelogram",Hard,2.1,"Subroutine symbols indicate calls to predefined procedures."
"What is the purpose of annotation in flowcharts?","Add explanations for clarity","Sort data","Execute code","Name variables",Hard,2.1,"Annotations provide extra details without affecting the flow."
"What is an off-page connector in flowcharts?","Links to another part of the flowchart on a different page","A decision symbol","A process step","An input symbol",Hard,2.1,"Off-page connectors manage large diagrams across multiple pages."
"What is the purpose of a trace table?","To debug by recording variable values at each step","To sort lists","To draw flowcharts","To write pseudocode",Hard,2.1,"Trace tables are essential for finding logic errors in complex algorithms."
"What is a loop counter?","Variable controlling loop iterations","A sorting algorithm","A decision point","An input value",Hard,2.1,"Loop counters (e.g., i in FOR loops) track repetition progress."
"What is stepwise refinement?","Gradually adding detail to an algorithm","Deleting code","Drawing symbols","Writing comments",Hard,2.1,"Stepwise refinement turns high-level ideas into executable steps."
"What is top-down design?","Start with main problem and decompose into subproblems","Start with code","Start with hardware","Start with testing",Hard,2.1,"Top-down design uses decomposition to manage complexity."
"What is the difference between pseudocode and actual code?","Pseudocode ignores syntax details, focuses on logic","Pseudocode runs faster","Pseudocode has more features","Pseudocode is for hardware",Hard,2.1,"Pseudocode is for human readability, not machine execution."
"What is a boundary case in algorithm testing?","Input at the edge of valid range (e.g., empty list)","A normal input","A syntax error","A variable name",Hard,2.1,"Testing boundaries (e.g., min/max values) reveals off-by-one errors."
"What is an edge case in algorithm testing?","An unusual input that may cause errors (e.g., duplicates)","A typical input","A logic error","A loop counter",Hard,2.1,"Edge cases test algorithm robustness (e.g., sorted/reverse sorted lists)."
"What is a base case in recursion?","Condition that stops recursion","A variable","A loop","A syntax error",Hard,2.1,"Base cases prevent infinite recursion (e.g., list size 0 or 1 in merge sort)."
"What is a recursive case in recursion?","Where function calls itself with smaller input","The termination condition","A variable assignment","An output statement",Hard,2.1,"Recursive cases break problems into smaller self-similar subproblems."
"In merge sort, what is the merging step?","Combining two sorted lists into one sorted list","Splitting the list","Swapping elements","Finding the middle",Hard,2.1,"Merging compares the front of each list and takes the smaller element."
"In binary search, what happens if the target is less than the mid?","Search the left half","Search the right half","Stop searching","Reverse the list",Hard,2.1,"The search space is halved by ignoring the right half."
"In binary search, what happens if the target is greater than the mid?","Search the right half","Search the left half","Stop searching","Reverse the list",Hard,2.1,"The search space is halved by ignoring the left half."
"In bubble sort, what does a swap do?","Exchanges two adjacent elements if out of order","Inserts an element","Deletes an element","Finds the minimum",Hard,2.1,"Swapping moves larger elements towards the end each pass."
"In insertion sort, what is the sorted sublist?","The part of the list already sorted","The entire list","The unsorted part","The middle element",Hard,2.1,"Insertion sort grows the sorted sublist from the left."
"What is the key action in insertion sort?","Inserting an element into its correct position in the sorted sublist","Swapping adjacent elements","Splitting the list","Merging lists",Hard,2.1,"Each new element is inserted by shifting larger elements right."
"What is the key action in bubble sort?","Repeatedly swapping adjacent out-of-order elements","Inserting elements","Dividing the list","Merging lists",Hard,2.1,"Bubble sort bubbles the largest element to the end each pass."
"What is the key action in merge sort?","Recursively splitting and merging sorted sublists","Swapping elements","Inserting elements","Linear searching",Hard,2.1,"Merge sort's efficiency comes from merging sorted lists in linear time."
"What is the key action in linear search?","Checking each element sequentially until found","Halving the list","Swapping elements","Inserting elements",Hard,2.1,"Linear search is straightforward but slow for large lists."
"What is the key action in binary search?","Repeatedly halving the search interval","Checking each element","Swapping elements","Inserting elements",Hard,2.1,"Binary search quickly narrows down the search space."